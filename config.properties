#######################################################
#
# Bundle Util Properties
#
#######################################################

# Full path to Java JDK or OpenJDK

#java_path="C:/Program Files (x86)/Java/jdk1.8.0_20"
java_path="C:/OpenJdk/openjdk-1.8.0.265-3.b01"


# Full path to bundletool .jar

bundletool_jar_path="C:/bundletool-master/bundletool-all-1.8.2.jar"


# Full path to Android SDK
# Like:	"C:/Program Files/android-sdk-windows"

android_sdk_path="C:/android-sdk-wind"


# Show command summary

show_command_summary="true"
#show_command_summary="false"

#===========================================================

# Notes:
# For commands which have a path, it will add double quotes
# around what comes after the '='
# Like:  --adb=C:/android-sdk-widows/platform-tools/adb.exe  ->  --adb="C:/android-sdk-widows/platform-tools/adb.exe"

# (*) You can use '[Home]' in your directory path and it will
# replace it with the current Project Home directory
# Like: [Home]/Output  ->  C:/Dev/MyProject/Output


# Custom AAPT2 Path: install-multi-apks (*)
#aapt2_path="--aapt2=path/to/aapt2"

# Path to adb: install-multi-apks, build-apks, install-apks, get-device-spec
#adb_path="--adb=C:/android-sdk-widows/platform-tools/adb.exe"

# List of .apks files to install: install-multi-apks (*)
#apks="--apks=/path/to/apks1.apks,/path/to/apks2.apks"

# Zip file containing .apks files to install: install-multi-apks (*)
#apks_zip="--apks-zip=/path/to/apks_containing.zip"

# Path to JSON file that describes the configuration of the App Bundle: build-bundle (*)
#config="--config=BundleConfig.pb.json"

# Device groups the given device belongs to: install-apks, get-device-spec
#device_groups="--device-groups=highRam,googlePixel"

# Device serial name/number: build-apks, install-multi-apks, install-apks, get-device-spec
#device_id="--device-id=device-serial-name"

# Device Spec Path: build-apks (*)
#device_spec="--device-spec=device_spec.json"

# Device tier to use for APK matching or given device: build-apks, install-apks, get-device-spec
#device_tier="--device-tier=low"

# Input SigningCertificateLineage: build-apks (*)
#lineage="--lineage=path/to/existing/lineage"

# Maximum number of threads to use: build-apks
#max_threads="--max-threads=4"

# File that will be included as metadata in the App Bundle: build-bundle (*)
#     The format of the value is '<bundle-path>:<physical-file>' where 'bundle-path'
#     denotes the file location inside the App Bundle's metadata directory, and 'physical-file'
#     is an existing file containing the raw data to be stored
#metadata_file="--metadata-file=com.some.namespace/file-name:path/to/file"

# Minimum API version for signing the generated APKs: build-apks
#min_api_version="--min-v3-rotation-api-version=30"

# Name of the module to apply the dump for: dump
#module="--module=base"

# Module file list: build-bundle (*)
#module_files="--modules=path/to/module1.zip,path/to/module2.zip"

# List of module names to include in the generated APK or installed: build-apks, install-apks
#module_names="--modules=base,module1,module2"

# List of modules to be extracted: extract-apks
#modules="--modules=base,module1,module2"
#modules="--modules=_ALL_"

# Path to properties file: build-apks (*)
#oldest_signer="--oldest-signer=C:/Android/Dev/keystore.properties"

# Generate APKs with optimizations for the given dimensions: build-apks
#optimize_for="--optimize-for=abi"
#optimize_for="--optimize-for=screen_density"
#optimize_for="--optimize-for=language"
#optimize_for="--optimize-for=texture_compression_format"
#optimize_for="--optimize-for=device_tier"

# Path to where matched APKs will be extracted: extract-apks (*)
#output_dir="--output-dir=output-dir"

# Specifies output format for generated APKs: build-apks
#output_format="--output-format=APK_SET"
#output_format="--output-format=DIRECTORY"

# Name of source generating the stamp: build-apks
#stamp_source="--stamp-source=local"

# Timeout in milliseconds: install-multi-apks, install-apks
#timeout_millis="--timeout-millis=60000"

#=========================================
#  Flags

# Uncomment to use
#=========================================

# List of files which will be pushed to local testing folder: install-apks 
#additional_local_testing_files_flag="--additional-local-testing-files"

# Allows APKs to be installed on the device: install-apks 
#allow_downgrade_flag="--allow-downgrade"

# Apps with 'android:testOnly=true' set in their manifest can also be deployed: install-apks
#allow_test_only_flag="--allow-test-only"

# Stamp will be generated and embedded in the generated APKs: build-apks
#create_stamp_flag="--create-stamp"

# Enables rollback of the entire atomic install: install-multi-apks
#enable_rollback_flag="--enable-rollback"

# metadata.json will be produced to the output directory: extract-apks
#include_metadata_flag="--include-metadata"

# APKs of the instant modules will be extracted: extract-apks, get-size
#instant_flag="--instant"

# The APK set will be built in local testing mode: build-apks
#local_testing_flag="--local-testing"

# Marks the installation as staged: install-multi-apks
#staged_flag="--staged"

# Only packages that are already installed on the device will be updated: install-multi-apks
#update_only_flag="--update-only"

# Prints the values of the resources: dump
#values_flag="--values"

# Print extra information about command execution: build-apks
verbose_flag="--verbose"

#=========================================

# Full path to App Bundle Key Store

#keystore_path="C:/Android/Dev/keystore/ab_release-key.jks"
#stamp_keystore_path="C:/Android/Dev/keystore/sk_release-key.jks"

# Key Alias

#key_alias=ab_alias
#stamp_key_alias=sk_alias

# Key Store Password

#key_store_password=xyz123xyz123
#stamp_key_store_password=xyz123xyz123

# Key Alias Password

#key_alias_password=xyz123xyz123
#stamp_key_alias_password=xyz123xyz123


